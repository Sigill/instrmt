#!/bin/bash

has_unbuffer() {
    command -v unbuffer >/dev/null 2>&1
}

now_ms() {
    date +%s.%3N
}

elapsed_time() {
    echo "$1 $2" | awk '{printf "%.1f", $2-$1}'
}

quote_command() {
    # @Q expansion appeared in bash 4.4, but it's ugly.
    command -v shell-quote >/dev/null 2>&1 && shell-quote "$@" || echo "${@@Q}"
}

main() {
    local USE_COLOR=
    test -t 1 && USE_COLOR=y

    local QUIET=

    while [[ $# -gt 0 ]]; do
        case $1 in
        -q)
            QUIET=y
            shift
            ;;
        *)
            break # Stop at first unknown argument, this is the command.
            ;;
        esac
    done

    local quoted_command=$(quote_command "$@")

    local time_start=$(now_ms)
    echo "[STARTED] $quoted_command"

    if [ "$QUIET" = y ]; then
        local TMPFILE=$(mktemp) || exit 1
        trap 'rm -f "$TMPFILE"' EXIT

        if [ "$USE_COLOR" = y -a has_unbuffer ]; then
            unbuffer "$@" &> "$TMPFILE"
        else
            "$@" &> "$TMPFILE"
        fi
        local status=$?

        if [ $status -ne 0 ]; then
            cat "$TMPFILE"
        fi
    else
        "$@"
        local status=$?
    fi

    local time_end=$(now_ms)

    if [ $status -eq 0 ]; then
        echo "[SUCCESS] $quoted_command [$(elapsed_time $time_start $time_end)s]"
    else
        echo "[FAILED] $quoted_command [$(elapsed_time $time_start $time_end)s]"
    fi

    exit $status
}

main "$@"
