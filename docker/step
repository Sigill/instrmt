#!/bin/bash

PRETTY=
test -t 1 && PRETTY=color

has_unbuffer() {
    command -v unbuffer >/dev/null 2>&1
}

QUIET=

while [[ $# -gt 0 ]]; do
    case $1 in
    -q)
        QUIET=y
        shift
        ;;
    *)
        break
        ;;
    esac
done

command -v shell-quote >/dev/null 2>&1 && quoted_command=$(shell-quote "$@") || quoted_command="${@@Q}"

if [ -n "$PRETTY" ]; then
    echo -ne "\e[90m[$(date +%H:%M:%S)]\e[39m "
    echo "$quoted_command [started]"
else
    echo "$(date +%H:%M:%S) $quoted_command [started]"
fi

if [ "$QUIET" = y ]; then
    TMPFILE=$(mktemp) || exit 1
    trap 'rm -f "$TMPFILE"' EXIT

    if [ -n "$PRETTY" -a has_unbuffer ]; then
        unbuffer "$@" &> "$TMPFILE"
    else
        "$@" &> "$TMPFILE"
    fi
    status=$?

    if [ $status -ne 0 ]; then
        cat "$TMPFILE"
    fi
else
    "$@"
    status=$?
fi

if [ $status -eq 0 ]; then
    if [ -n "$PRETTY" ]; then
        echo -ne "\e[90m[$(date +%H:%M:%S)]\e[39m "
        echo "$quoted_command [completed]"
    else
        echo "$(date +%H:%M:%S) $quoted_command [completed]"
    fi
else
    if [ -n "$PRETTY" ]; then
        echo -ne "\e[90m[$(date +%H:%M:%S)]\e[39m "
        echo "$quoted_command [failed]"
        echo -e "\e[90m[$(date +%H:%M:%S)]\e[39m Command failed with exit code $status"
    else
        echo "$(date +%H:%M:%S) $quoted_command [failed]"
        echo "[$(date +%H:%M:%S)] Command failed with exit code $status"
    fi
fi

exit $status
